C51 COMPILER V9.57.0.0   REDMOD                                                            12/10/2021 08:17:30 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE REDMOD
OBJECT MODULE PLACED IN .\Objects\redmod.obj
COMPILER INVOKED BY: D:\keil5B\C51\BIN\C51.EXE redmod.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\red
                    -mod.lst) TABS(2) OBJECT(.\Objects\redmod.obj)

line level    source

   1          #include "redmod.h"
   2          u8 IrValue[6]; //[0]=地址码；[1]=地址反码；[2]=控制码；[3]=控制反码
   3          u8 Time;
   4          
   5          /*******************************************************************************
   6           * 函 数 名         : delay
   7           * 函数功能      : 延时函数，i=1时，大约延时10us
   8           *******************************************************************************/
   9          void delay0(u16 i)
  10          {
  11   1        while (i--)
  12   1          ;
  13   1      }
  14          /*******************************************************************************
  15           * 函数名         : IrInit()
  16           * 函数功能      : 初始化红外线接收
  17           * 输入           : 无
  18           * 输出            : 无
  19           *******************************************************************************/
  20          
  21          void IrInit()
  22          {
  23   1        IT0 = 1; //下降沿触发
  24   1        EX0 = 1; //打开中断0允许
  25   1        EA = 1;  //打开总中断
  26   1      
  27   1        IRIN = 1; //初始化端口
  28   1      }
  29          
  30          /*******************************************************************************
  31           * 函数名         : ReadIr()
  32           * 函数功能      : 读取红外数值的中断函数
  33           * 输入           : 无
  34           * 输出            : 无
  35           *******************************************************************************/
  36          
  37          void ReadIr() interrupt 0
  38          {
  39   1        u8 j, k;
  40   1        u16 err;
  41   1        Time = 0;
  42   1        delay0(700);   // 7ms
  43   1        if (IRIN == 0) //确认是否真的接收到正确的信号
  44   1        {
  45   2      
  46   2          err = 1000; // 1000*10us=10ms,超过说明接收到错误的信号
  47   2          /*当两个条件都为真是循环，如果有一个条件为假的时候跳出循环，免得程序出
             -错的时
  48   2          侯，程序死在这里*/
  49   2          while ((IRIN == 0) && (err > 0)) //等待前面9ms的低电平过去
  50   2          {
  51   3            delay0(1);
  52   3            err--;
  53   3          }
C51 COMPILER V9.57.0.0   REDMOD                                                            12/10/2021 08:17:30 PAGE 2   

  54   2          if (IRIN == 1) //如果正确等到9ms低电平
  55   2          {
  56   3            err = 500;
  57   3            while ((IRIN == 1) && (err > 0)) //等待4.5ms的起始高电平过去
  58   3            {
  59   4              delay0(1);
  60   4              err--;
  61   4            }
  62   3            for (k = 0; k < 4; k++) //共有4组数据
  63   3            {
  64   4              for (j = 0; j < 8; j++) //接收一组数据
  65   4              {
  66   5      
  67   5                err = 60;
  68   5                while ((IRIN == 0) && (err > 0)) //等待信号前面的560us低电平过去
  69   5                {
  70   6                  delay0(1);
  71   6                  err--;
  72   6                }
  73   5                err = 500;
  74   5                while ((IRIN == 1) && (err > 0)) //计算高电平的时间长度。
  75   5                {
  76   6                  delay0(10); // 0.1ms
  77   6                  Time++;
  78   6                  err--;
  79   6                  if (Time > 30)
  80   6                  {
  81   7                    return;
  82   7                  }
  83   6                }
  84   5                IrValue[k] >>= 1; // k表示第几组数据
  85   5                if (Time >= 8)    //如果高电平出现大于565us，那么是1
  86   5                {
  87   6                  IrValue[k] |= 0x80;
  88   6                }
  89   5                Time = 0; //用完时间要重新赋值
  90   5              }
  91   4            }
  92   3          }
  93   2          if (IrValue[2] != ~IrValue[3])
  94   2          {
  95   3            return;
  96   3          }
  97   2        }
  98   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    253    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
